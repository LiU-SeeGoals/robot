ARM GAS  /tmp/ccR2a0SM.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32h7xx_dualcore_boot_cm4_cm7.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c"
  20              		.section	.text.SystemInit,"ax",%progbits
  21              		.align	1
  22              		.global	SystemInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SystemInit:
  28              	.LFB132:
   1:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
   2:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   ******************************************************************************
   3:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @file    system_stm32h7xx_dualcore_boot_cm4_cm7.c
   4:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @author  MCD Application Team
   5:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *          This provides system initialization template function is case of
   7:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *          an application using a dual core STM32H7 device where
   8:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *          Cortex-M7 and Cortex-M4 boot are enabled at the FLASH option bytes
   9:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  10:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *   This file provides two functions and one global variable to be called from
  11:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *   user application:
  12:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *      - SystemInit(): This function is called at startup just after reset and
  13:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                      before branch to main program. This call is made inside
  14:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                      the "startup_stm32h7xx.s" file.
  15:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  16:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  17:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                                  by the user application to setup the SysTick
  18:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                                  timer or configure other parameters.
  19:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  20:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  21:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                                 be called whenever the core clock is changed
  22:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *                                 during program execution.
  23:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  24:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  25:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   ******************************************************************************
  26:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @attention
  27:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  28:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * Copyright (c) 2017 STMicroelectronics.
  29:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * All rights reserved.
  30:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
ARM GAS  /tmp/ccR2a0SM.s 			page 2


  31:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * This software is licensed under terms that can be found in the LICENSE file
  32:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * in the root directory of this software component.
  33:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  34:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
  35:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   ******************************************************************************
  36:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  37:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  38:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup CMSIS
  39:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  40:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  41:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  42:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup stm32h7xx_system
  43:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  44:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  45:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  46:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  47:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  48:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  49:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  50:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #include "stm32h7xx.h"
  51:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #include <math.h>
  52:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  53:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if !defined  (HSE_VALUE)
  54:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  55:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* HSE_VALUE */
  56:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  57:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if !defined  (CSI_VALUE)
  58:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  59:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CSI_VALUE */
  60:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  61:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if !defined  (HSI_VALUE)
  62:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  63:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* HSI_VALUE */
  64:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  65:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  66:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
  67:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
  68:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  69:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  70:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  71:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  72:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  73:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  74:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
  75:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
  76:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  77:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  78:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  79:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
  80:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
  81:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  82:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /************************* Miscellaneous Configuration ************************/
  83:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /* Note: Following vector table addresses must be defined in line with linker
  84:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****          configuration. */
  85:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /*!< Uncomment the following line if you need to relocate the vector table
  86:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  87:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      remap of boot address selected */
ARM GAS  /tmp/ccR2a0SM.s 			page 3


  88:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /* #define USER_VECT_TAB_ADDRESS */
  89:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
  90:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(USER_VECT_TAB_ADDRESS)
  91:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(CORE_CM4)
  92:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  93:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  94:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /* #define VECT_TAB_SRAM */
  95:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(VECT_TAB_SRAM)
  96:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
  97:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
  98:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
  99:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 100:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 101:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 102:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 103:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 104:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 105:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* VECT_TAB_SRAM */
 106:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #elif defined(CORE_CM7)
 107:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 108:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 109:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /* #define VECT_TAB_SRAM */
 110:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(VECT_TAB_SRAM)
 111:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 112:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 113:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 114:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 115:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 116:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 117:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 118:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 119:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                                                        This value must be a multiple of 0x400. */
 120:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* VECT_TAB_SRAM */
 121:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 122:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #error Please #define CORE_CM4 or CORE_CM7
 123:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CORE_CM4 */
 124:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* USER_VECT_TAB_ADDRESS */
 125:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /******************************************************************************/
 126:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 127:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 128:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
 129:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 130:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 131:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 132:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
 133:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 134:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 135:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 136:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
 137:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 138:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 139:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 140:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
 141:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 142:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* This variable is updated in three ways:
 143:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 144:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
ARM GAS  /tmp/ccR2a0SM.s 			page 4


 145:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 146:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****          Note: If you use this function to configure the system clock; then there
 147:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 148:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****                variable is updated automatically.
 149:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 150:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   uint32_t SystemCoreClock = 64000000;
 151:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   uint32_t SystemD2Clock = 64000000;
 152:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 153:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 154:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 155:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
 156:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 157:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 158:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 159:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
 160:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 161:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 162:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 163:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @}
 164:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 165:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 166:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 167:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @{
 168:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 169:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 170:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 171:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @brief  Setup the microcontroller system
 172:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         Initialize the FPU setting and  vector table location
 173:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         configuration.
 174:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @param  None
 175:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @retval None
 176:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 177:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** void SystemInit (void)
 178:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** {
  29              		.loc 1 178 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 179:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* FPU settings ------------------------------------------------------------*/
 180:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 181:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  34              		.loc 1 181 5 view .LVU1
  35              		.loc 1 181 8 is_stmt 0 view .LVU2
  36 0000 054B     		ldr	r3, .L2
  37 0002 D3F88820 		ldr	r2, [r3, #136]
  38              		.loc 1 181 16 view .LVU3
  39 0006 42F47002 		orr	r2, r2, #15728640
  40 000a C3F88820 		str	r2, [r3, #136]
 182:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   #endif
 183:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 184:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /*SEVONPEND enabled so that an interrupt coming from the CPU(n) interrupt signal is
 185:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****      detectable by the CPU after a WFI/WFE instruction.*/
 186:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****  SCB->SCR |= SCB_SCR_SEVONPEND_Msk;
  41              		.loc 1 186 2 is_stmt 1 view .LVU4
  42              		.loc 1 186 5 is_stmt 0 view .LVU5
  43 000e 1A69     		ldr	r2, [r3, #16]
ARM GAS  /tmp/ccR2a0SM.s 			page 5


  44              		.loc 1 186 11 view .LVU6
  45 0010 42F01002 		orr	r2, r2, #16
  46 0014 1A61     		str	r2, [r3, #16]
 187:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 188:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(CORE_CM7)
 189:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 190:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    /* Increasing the CPU frequency */
 191:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 192:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   {
 193:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 194:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 195:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 196:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 197:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Set HSION bit */
 198:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CR |= RCC_CR_HSION;
 199:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 200:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset CFGR register */
 201:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CFGR = 0x00000000;
 202:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 203:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 204:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CR &= 0xEAF6ED7FU;
 205:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 206:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 207:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 208:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   {
 209:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 210:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 211:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 212:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 213:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset D1CFGR register */
 214:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->D1CFGR = 0x00000000;
 215:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 216:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset D2CFGR register */
 217:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->D2CFGR = 0x00000000;
 218:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 219:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset D3CFGR register */
 220:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->D3CFGR = 0x00000000;
 221:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 222:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLLCKSELR register */
 223:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLLCKSELR = 0x02020200;
 224:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 225:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLLCFGR register */
 226:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLLCFGR = 0x01FF0000;
 227:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL1DIVR register */
 228:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL1DIVR = 0x01010280;
 229:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL1FRACR register */
 230:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL1FRACR = 0x00000000;
 231:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 232:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL2DIVR register */
 233:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL2DIVR = 0x01010280;
 234:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 235:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL2FRACR register */
 236:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 237:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL2FRACR = 0x00000000;
 238:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL3DIVR register */
 239:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL3DIVR = 0x01010280;
 240:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
ARM GAS  /tmp/ccR2a0SM.s 			page 6


 241:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset PLL3FRACR register */
 242:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->PLL3FRACR = 0x00000000;
 243:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 244:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Reset HSEBYP bit */
 245:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CR &= 0xFFFBFFFFU;
 246:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 247:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Disable all interrupts */
 248:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   RCC->CIER = 0x00000000;
 249:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 250:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Enable CortexM7 HSEM EXTI line (line 78)*/
 251:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   EXTI_D2->EMR3 |= 0x4000UL;
 252:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 253:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 254:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   {
 255:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* if stm32h7 revY*/
 256:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 257:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 258:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 259:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 260:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CORE_CM7*/
 261:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 262:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(CORE_CM4)
 263:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 264:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(USER_VECT_TAB_ADDRESS)
 265:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 266:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* USER_VECT_TAB_ADDRESS */
 267:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 268:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #elif defined(CORE_CM7)
 269:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /*
 270:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    * Disable the FMC bank1 (enabled after reset).
 271:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 272:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 273:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    */
 274:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 275:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 276:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Configure the Vector Table location -------------------------------------*/
 277:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(USER_VECT_TAB_ADDRESS)
 278:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 279:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* USER_VECT_TAB_ADDRESS */
 280:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 281:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 282:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #error Please #define CORE_CM4 or CORE_CM7
 283:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CORE_CM4 */
 284:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** }
  47              		.loc 1 284 1 view .LVU7
  48 0016 7047     		bx	lr
  49              	.L3:
  50              		.align	2
  51              	.L2:
  52 0018 00ED00E0 		.word	-536810240
  53              		.cfi_endproc
  54              	.LFE132:
  56              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  57              		.align	1
  58              		.global	SystemCoreClockUpdate
  59              		.syntax unified
  60              		.thumb
ARM GAS  /tmp/ccR2a0SM.s 			page 7


  61              		.thumb_func
  63              	SystemCoreClockUpdate:
  64              	.LFB133:
 285:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 286:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** /**
 287:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 288:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         The SystemCoreClock variable contains the core clock , it can
 289:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         be used by the user application to setup the SysTick timer or configure
 290:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         other parameters.
 291:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 292:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @note   Each time the core clock changes, this function must be called
 293:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 294:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         based on this variable will be incorrect.
 295:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 296:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @note   - The system frequency computed by this function is not the real
 297:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           frequency in the chip. It is calculated based on the predefined
 298:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           constant and the selected clock source:
 299:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 300:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 301:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 302:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 303:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 304:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 305:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 306:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 307:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             4 MHz) but the real value may vary depending on the variations
 308:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             in voltage and temperature.
 309:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 310:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             64 MHz) but the real value may vary depending on the variations
 311:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *             in voltage and temperature.
 312:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 313:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 314:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 315:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *              frequency of the crystal used. Otherwise, this function may
 316:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *              have wrong result.
 317:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *
 318:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *         - The result of this function could be not correct when using fractional
 319:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   *           value for HSE crystal.
 320:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @param  None
 321:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   * @retval None
 322:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   */
 323:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** void SystemCoreClockUpdate (void)
 324:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** {
  65              		.loc 1 324 1 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 0000 10B4     		push	{r4}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 4, -4
 325:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
  74              		.loc 1 325 3 view .LVU9
 326:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   uint32_t common_system_clock;
  75              		.loc 1 326 3 view .LVU10
 327:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   float_t fracn1, pllvco;
ARM GAS  /tmp/ccR2a0SM.s 			page 8


  76              		.loc 1 327 3 view .LVU11
 328:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 329:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 330:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 331:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  77              		.loc 1 331 3 view .LVU12
  78              		.loc 1 331 14 is_stmt 0 view .LVU13
  79 0002 7A4B     		ldr	r3, .L17
  80 0004 1B69     		ldr	r3, [r3, #16]
  81              		.loc 1 331 21 view .LVU14
  82 0006 03F03803 		and	r3, r3, #56
  83              		.loc 1 331 3 view .LVU15
  84 000a 182B     		cmp	r3, #24
  85 000c 00F2E580 		bhi	.L5
  86 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
  87              	.L7:
  88 0014 1B00     		.2byte	(.L10-.L7)/2
  89 0016 E300     		.2byte	(.L5-.L7)/2
  90 0018 E300     		.2byte	(.L5-.L7)/2
  91 001a E300     		.2byte	(.L5-.L7)/2
  92 001c E300     		.2byte	(.L5-.L7)/2
  93 001e E300     		.2byte	(.L5-.L7)/2
  94 0020 E300     		.2byte	(.L5-.L7)/2
  95 0022 E300     		.2byte	(.L5-.L7)/2
  96 0024 1900     		.2byte	(.L9-.L7)/2
  97 0026 E300     		.2byte	(.L5-.L7)/2
  98 0028 E300     		.2byte	(.L5-.L7)/2
  99 002a E300     		.2byte	(.L5-.L7)/2
 100 002c E300     		.2byte	(.L5-.L7)/2
 101 002e E300     		.2byte	(.L5-.L7)/2
 102 0030 E300     		.2byte	(.L5-.L7)/2
 103 0032 E300     		.2byte	(.L5-.L7)/2
 104 0034 EA00     		.2byte	(.L15-.L7)/2
 105 0036 E300     		.2byte	(.L5-.L7)/2
 106 0038 E300     		.2byte	(.L5-.L7)/2
 107 003a E300     		.2byte	(.L5-.L7)/2
 108 003c E300     		.2byte	(.L5-.L7)/2
 109 003e E300     		.2byte	(.L5-.L7)/2
 110 0040 E300     		.2byte	(.L5-.L7)/2
 111 0042 E300     		.2byte	(.L5-.L7)/2
 112 0044 3600     		.2byte	(.L6-.L7)/2
 113              		.p2align 1
 114              	.L9:
 115 0046 6A4B     		ldr	r3, .L17+4
 116 0048 05E0     		b	.L8
 117              	.L10:
 332:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   {
 333:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 334:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 118              		.loc 1 334 5 is_stmt 1 view .LVU16
 119              		.loc 1 334 57 is_stmt 0 view .LVU17
 120 004a 684B     		ldr	r3, .L17
 121 004c 1A68     		ldr	r2, [r3]
 122              		.loc 1 334 78 view .LVU18
 123 004e C2F3C102 		ubfx	r2, r2, #3, #2
 124              		.loc 1 334 25 view .LVU19
 125 0052 684B     		ldr	r3, .L17+8
ARM GAS  /tmp/ccR2a0SM.s 			page 9


 126 0054 D340     		lsrs	r3, r3, r2
 127              	.LVL0:
 335:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 128              		.loc 1 335 5 is_stmt 1 view .LVU20
 129              	.L8:
 336:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 337:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 338:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     common_system_clock = CSI_VALUE;
 339:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 340:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 341:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 342:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     common_system_clock = HSE_VALUE;
 343:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 344:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 345:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 346:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 347:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 348:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     SYSCLK = PLL_VCO / PLLR
 349:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     */
 350:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 351:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 352:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 353:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 354:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 355:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     if (pllm != 0U)
 356:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     {
 357:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       switch (pllsource)
 358:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       {
 359:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 360:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 361:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 363:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 364:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 365:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 366:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 368:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 369:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 370:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 372:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 373:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 374:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       default:
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 377:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 378:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       }
 379:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 380:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 381:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 382:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     else
 383:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     {
 384:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       common_system_clock = 0U;
 385:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 386:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 387:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
ARM GAS  /tmp/ccR2a0SM.s 			page 10


 388:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   default:
 389:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 390:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 391:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 392:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 393:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 394:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 130              		.loc 1 394 3 view .LVU21
 131              		.loc 1 394 30 is_stmt 0 view .LVU22
 132 0056 6548     		ldr	r0, .L17
 133 0058 8269     		ldr	r2, [r0, #24]
 134              		.loc 1 394 59 view .LVU23
 135 005a C2F30322 		ubfx	r2, r2, #8, #4
 136              		.loc 1 394 25 view .LVU24
 137 005e 6649     		ldr	r1, .L17+12
 138 0060 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 139              	.LVL1:
 395:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 396:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 397:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   common_system_clock >>= tmp;
 140              		.loc 1 397 3 is_stmt 1 view .LVU25
 141              		.loc 1 397 23 is_stmt 0 view .LVU26
 142 0062 D340     		lsrs	r3, r3, r2
 143              	.LVL2:
 398:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 399:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 400:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 144              		.loc 1 400 3 is_stmt 1 view .LVU27
 145              		.loc 1 400 66 is_stmt 0 view .LVU28
 146 0064 8269     		ldr	r2, [r0, #24]
 147              	.LVL3:
 148              		.loc 1 400 93 view .LVU29
 149 0066 02F00F02 		and	r2, r2, #15
 150              		.loc 1 400 61 view .LVU30
 151 006a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 152              		.loc 1 400 118 view .LVU31
 153 006c 02F01F02 		and	r2, r2, #31
 154              		.loc 1 400 40 view .LVU32
 155 0070 D340     		lsrs	r3, r3, r2
 156              	.LVL4:
 157              		.loc 1 400 17 view .LVU33
 158 0072 624A     		ldr	r2, .L17+16
 159 0074 1360     		str	r3, [r2]
 401:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 402:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #if defined(CORE_CM4)
 403:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SystemCoreClock = SystemD2Clock;
 160              		.loc 1 403 3 is_stmt 1 view .LVU34
 161              		.loc 1 403 19 is_stmt 0 view .LVU35
 162 0076 624A     		ldr	r2, .L17+20
 163 0078 1360     		str	r3, [r2]
 404:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #else
 405:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   SystemCoreClock = common_system_clock;
 406:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** #endif /* CORE_CM4 */
 407:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** }
 164              		.loc 1 407 1 view .LVU36
 165 007a 5DF8044B 		ldr	r4, [sp], #4
 166              	.LCFI1:
ARM GAS  /tmp/ccR2a0SM.s 			page 11


 167              		.cfi_remember_state
 168              		.cfi_restore 4
 169              		.cfi_def_cfa_offset 0
 170 007e 7047     		bx	lr
 171              	.LVL5:
 172              	.L6:
 173              	.LCFI2:
 174              		.cfi_restore_state
 350:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 175              		.loc 1 350 5 is_stmt 1 view .LVU37
 350:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 176              		.loc 1 350 21 is_stmt 0 view .LVU38
 177 0080 5A4A     		ldr	r2, .L17
 178 0082 916A     		ldr	r1, [r2, #40]
 350:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 179              		.loc 1 350 15 view .LVU39
 180 0084 01F00301 		and	r1, r1, #3
 181              	.LVL6:
 351:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 182              		.loc 1 351 5 is_stmt 1 view .LVU40
 351:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 183              		.loc 1 351 17 is_stmt 0 view .LVU41
 184 0088 946A     		ldr	r4, [r2, #40]
 351:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 185              		.loc 1 351 10 view .LVU42
 186 008a C4F30513 		ubfx	r3, r4, #4, #6
 187              	.LVL7:
 352:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 188              		.loc 1 352 5 is_stmt 1 view .LVU43
 352:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 189              		.loc 1 352 22 is_stmt 0 view .LVU44
 190 008e D06A     		ldr	r0, [r2, #44]
 352:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 191              		.loc 1 352 15 view .LVU45
 192 0090 00F00100 		and	r0, r0, #1
 193              	.LVL8:
 353:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 194              		.loc 1 353 5 is_stmt 1 view .LVU46
 353:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 195              		.loc 1 353 50 is_stmt 0 view .LVU47
 196 0094 526B     		ldr	r2, [r2, #52]
 353:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 197              		.loc 1 353 85 view .LVU48
 198 0096 C2F3CC02 		ubfx	r2, r2, #3, #13
 353:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 199              		.loc 1 353 23 view .LVU49
 200 009a 00FB02F2 		mul	r2, r0, r2
 353:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 201              		.loc 1 353 12 view .LVU50
 202 009e 07EE902A 		vmov	s15, r2	@ int
 203 00a2 F8EE677A 		vcvt.f32.u32	s15, s15
 204              	.LVL9:
 355:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     {
 205              		.loc 1 355 5 is_stmt 1 view .LVU51
 355:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     {
 206              		.loc 1 355 8 is_stmt 0 view .LVU52
 207 00a6 14F47C7F 		tst	r4, #1008
ARM GAS  /tmp/ccR2a0SM.s 			page 12


 208 00aa D4D0     		beq	.L8
 357:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       {
 209              		.loc 1 357 7 is_stmt 1 view .LVU53
 210 00ac 0129     		cmp	r1, #1
 211 00ae 36D0     		beq	.L11
 212 00b0 0229     		cmp	r1, #2
 213 00b2 51D0     		beq	.L12
 214 00b4 0029     		cmp	r1, #0
 215 00b6 6CD1     		bne	.L13
 361:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 216              		.loc 1 361 9 view .LVU54
 361:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 217              		.loc 1 361 39 is_stmt 0 view .LVU55
 218 00b8 4C48     		ldr	r0, .L17
 219              	.LVL10:
 361:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 220              		.loc 1 361 39 view .LVU56
 221 00ba 0168     		ldr	r1, [r0]
 222              	.LVL11:
 361:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 223              		.loc 1 361 60 view .LVU57
 224 00bc C1F3C101 		ubfx	r1, r1, #3, #2
 361:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 225              		.loc 1 361 18 view .LVU58
 226 00c0 4C4A     		ldr	r2, .L17+8
 227 00c2 CA40     		lsrs	r2, r2, r1
 228              	.LVL12:
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 229              		.loc 1 362 9 is_stmt 1 view .LVU59
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 230              		.loc 1 362 20 is_stmt 0 view .LVU60
 231 00c4 07EE102A 		vmov	s14, r2	@ int
 232 00c8 F8EE476A 		vcvt.f32.u32	s13, s14
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 233              		.loc 1 362 40 view .LVU61
 234 00cc 07EE103A 		vmov	s14, r3	@ int
 235 00d0 B8EE476A 		vcvt.f32.u32	s12, s14
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 236              		.loc 1 362 38 view .LVU62
 237 00d4 86EE867A 		vdiv.f32	s14, s13, s12
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 238              		.loc 1 362 81 view .LVU63
 239 00d8 036B     		ldr	r3, [r0, #48]
 240              	.LVL13:
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 241              		.loc 1 362 67 view .LVU64
 242 00da C3F30803 		ubfx	r3, r3, #0, #9
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 243              		.loc 1 362 58 view .LVU65
 244 00de 06EE903A 		vmov	s13, r3	@ int
 245 00e2 F8EE666A 		vcvt.f32.u32	s13, s13
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 246              		.loc 1 362 120 view .LVU66
 247 00e6 9FED476A 		vldr.32	s12, .L17+24
 248 00ea 67EE867A 		vmul.f32	s15, s15, s12
 249              	.LVL14:
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
ARM GAS  /tmp/ccR2a0SM.s 			page 13


 250              		.loc 1 362 111 view .LVU67
 251 00ee 76EEA77A 		vadd.f32	s15, s13, s15
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 252              		.loc 1 362 138 view .LVU68
 253 00f2 F7EE006A 		vmov.f32	s13, #1.0e+0
 254 00f6 77EEA67A 		vadd.f32	s15, s15, s13
 362:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 255              		.loc 1 362 16 view .LVU69
 256 00fa 27EE277A 		vmul.f32	s14, s14, s15
 257              	.LVL15:
 364:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 258              		.loc 1 364 9 is_stmt 1 view .LVU70
 259              	.L14:
 379:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 260              		.loc 1 379 7 view .LVU71
 379:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 261              		.loc 1 379 20 is_stmt 0 view .LVU72
 262 00fe 3B4B     		ldr	r3, .L17
 263 0100 1B6B     		ldr	r3, [r3, #48]
 379:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 264              		.loc 1 379 50 view .LVU73
 265 0102 C3F34623 		ubfx	r3, r3, #9, #7
 379:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 266              		.loc 1 379 12 view .LVU74
 267 0106 0133     		adds	r3, r3, #1
 268              	.LVL16:
 380:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 269              		.loc 1 380 7 is_stmt 1 view .LVU75
 380:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 270              		.loc 1 380 57 is_stmt 0 view .LVU76
 271 0108 07EE903A 		vmov	s15, r3	@ int
 272 010c F8EE677A 		vcvt.f32.u32	s15, s15
 380:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 273              		.loc 1 380 40 view .LVU77
 274 0110 C7EE276A 		vdiv.f32	s13, s14, s15
 380:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 275              		.loc 1 380 27 view .LVU78
 276 0114 FCEEE67A 		vcvt.u32.f32	s15, s13
 277 0118 17EE903A 		vmov	r3, s15	@ int
 278              	.LVL17:
 380:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     }
 279              		.loc 1 380 27 view .LVU79
 280 011c 9BE7     		b	.L8
 281              	.LVL18:
 282              	.L11:
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 283              		.loc 1 367 11 is_stmt 1 view .LVU80
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 284              		.loc 1 367 42 is_stmt 0 view .LVU81
 285 011e 07EE103A 		vmov	s14, r3	@ int
 286 0122 F8EE476A 		vcvt.f32.u32	s13, s14
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 287              		.loc 1 367 40 view .LVU82
 288 0126 9FED386A 		vldr.32	s12, .L17+28
 289 012a 86EE267A 		vdiv.f32	s14, s12, s13
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 290              		.loc 1 367 83 view .LVU83
ARM GAS  /tmp/ccR2a0SM.s 			page 14


 291 012e 2F4B     		ldr	r3, .L17
 292              	.LVL19:
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 293              		.loc 1 367 83 view .LVU84
 294 0130 1B6B     		ldr	r3, [r3, #48]
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 295              		.loc 1 367 69 view .LVU85
 296 0132 C3F30803 		ubfx	r3, r3, #0, #9
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 297              		.loc 1 367 60 view .LVU86
 298 0136 06EE903A 		vmov	s13, r3	@ int
 299 013a F8EE666A 		vcvt.f32.u32	s13, s13
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 300              		.loc 1 367 122 view .LVU87
 301 013e 9FED316A 		vldr.32	s12, .L17+24
 302 0142 67EE867A 		vmul.f32	s15, s15, s12
 303              	.LVL20:
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 304              		.loc 1 367 113 view .LVU88
 305 0146 76EEA77A 		vadd.f32	s15, s13, s15
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 306              		.loc 1 367 140 view .LVU89
 307 014a F7EE006A 		vmov.f32	s13, #1.0e+0
 308 014e 77EEA67A 		vadd.f32	s15, s15, s13
 367:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 309              		.loc 1 367 18 view .LVU90
 310 0152 27EE277A 		vmul.f32	s14, s14, s15
 311              	.LVL21:
 368:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 312              		.loc 1 368 9 is_stmt 1 view .LVU91
 313 0156 D2E7     		b	.L14
 314              	.LVL22:
 315              	.L12:
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 316              		.loc 1 371 11 view .LVU92
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 317              		.loc 1 371 42 is_stmt 0 view .LVU93
 318 0158 07EE103A 		vmov	s14, r3	@ int
 319 015c F8EE476A 		vcvt.f32.u32	s13, s14
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 320              		.loc 1 371 40 view .LVU94
 321 0160 9FED2A6A 		vldr.32	s12, .L17+32
 322 0164 86EE267A 		vdiv.f32	s14, s12, s13
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 323              		.loc 1 371 83 view .LVU95
 324 0168 204B     		ldr	r3, .L17
 325              	.LVL23:
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 326              		.loc 1 371 83 view .LVU96
 327 016a 1B6B     		ldr	r3, [r3, #48]
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 328              		.loc 1 371 69 view .LVU97
 329 016c C3F30803 		ubfx	r3, r3, #0, #9
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 330              		.loc 1 371 60 view .LVU98
 331 0170 06EE903A 		vmov	s13, r3	@ int
 332 0174 F8EE666A 		vcvt.f32.u32	s13, s13
ARM GAS  /tmp/ccR2a0SM.s 			page 15


 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 333              		.loc 1 371 122 view .LVU99
 334 0178 9FED226A 		vldr.32	s12, .L17+24
 335 017c 67EE867A 		vmul.f32	s15, s15, s12
 336              	.LVL24:
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 337              		.loc 1 371 113 view .LVU100
 338 0180 76EEA77A 		vadd.f32	s15, s13, s15
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 339              		.loc 1 371 140 view .LVU101
 340 0184 F7EE006A 		vmov.f32	s13, #1.0e+0
 341 0188 77EEA67A 		vadd.f32	s15, s15, s13
 371:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 342              		.loc 1 371 18 view .LVU102
 343 018c 27EE277A 		vmul.f32	s14, s14, s15
 344              	.LVL25:
 372:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c **** 
 345              		.loc 1 372 9 is_stmt 1 view .LVU103
 346 0190 B5E7     		b	.L14
 347              	.LVL26:
 348              	.L13:
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 349              		.loc 1 375 11 view .LVU104
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 350              		.loc 1 375 41 is_stmt 0 view .LVU105
 351 0192 1648     		ldr	r0, .L17
 352              	.LVL27:
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 353              		.loc 1 375 41 view .LVU106
 354 0194 0168     		ldr	r1, [r0]
 355              	.LVL28:
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 356              		.loc 1 375 62 view .LVU107
 357 0196 C1F3C101 		ubfx	r1, r1, #3, #2
 375:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 358              		.loc 1 375 20 view .LVU108
 359 019a 164A     		ldr	r2, .L17+8
 360 019c CA40     		lsrs	r2, r2, r1
 361              	.LVL29:
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 362              		.loc 1 376 11 is_stmt 1 view .LVU109
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 363              		.loc 1 376 21 is_stmt 0 view .LVU110
 364 019e 07EE102A 		vmov	s14, r2	@ int
 365 01a2 F8EE476A 		vcvt.f32.u32	s13, s14
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 366              		.loc 1 376 41 view .LVU111
 367 01a6 07EE103A 		vmov	s14, r3	@ int
 368 01aa B8EE476A 		vcvt.f32.u32	s12, s14
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 369              		.loc 1 376 39 view .LVU112
 370 01ae 86EE867A 		vdiv.f32	s14, s13, s12
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 371              		.loc 1 376 82 view .LVU113
 372 01b2 036B     		ldr	r3, [r0, #48]
 373              	.LVL30:
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
ARM GAS  /tmp/ccR2a0SM.s 			page 16


 374              		.loc 1 376 68 view .LVU114
 375 01b4 C3F30803 		ubfx	r3, r3, #0, #9
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 376              		.loc 1 376 59 view .LVU115
 377 01b8 06EE903A 		vmov	s13, r3	@ int
 378 01bc F8EE666A 		vcvt.f32.u32	s13, s13
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 379              		.loc 1 376 121 view .LVU116
 380 01c0 9FED106A 		vldr.32	s12, .L17+24
 381 01c4 67EE867A 		vmul.f32	s15, s15, s12
 382              	.LVL31:
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 383              		.loc 1 376 112 view .LVU117
 384 01c8 76EEA77A 		vadd.f32	s15, s13, s15
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 385              		.loc 1 376 139 view .LVU118
 386 01cc F7EE006A 		vmov.f32	s13, #1.0e+0
 387 01d0 77EEA67A 		vadd.f32	s15, s15, s13
 376:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****         break;
 388              		.loc 1 376 18 view .LVU119
 389 01d4 27EE277A 		vmul.f32	s14, s14, s15
 390              	.LVL32:
 377:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****       }
 391              		.loc 1 377 9 is_stmt 1 view .LVU120
 392 01d8 91E7     		b	.L14
 393              	.LVL33:
 394              	.L5:
 389:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 395              		.loc 1 389 5 view .LVU121
 389:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 396              		.loc 1 389 57 is_stmt 0 view .LVU122
 397 01da 044B     		ldr	r3, .L17
 398 01dc 1A68     		ldr	r2, [r3]
 389:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 399              		.loc 1 389 78 view .LVU123
 400 01de C2F3C102 		ubfx	r2, r2, #3, #2
 389:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 401              		.loc 1 389 25 view .LVU124
 402 01e2 044B     		ldr	r3, .L17+8
 403 01e4 D340     		lsrs	r3, r3, r2
 404              	.LVL34:
 390:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****   }
 405              		.loc 1 390 5 is_stmt 1 view .LVU125
 406 01e6 36E7     		b	.L8
 407              	.LVL35:
 408              	.L15:
 342:../../Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c ****     break;
 409              		.loc 1 342 25 is_stmt 0 view .LVU126
 410 01e8 094B     		ldr	r3, .L17+36
 411 01ea 34E7     		b	.L8
 412              	.L18:
 413              		.align	2
 414              	.L17:
 415 01ec 00440258 		.word	1476543488
 416 01f0 00093D00 		.word	4000000
 417 01f4 0090D003 		.word	64000000
 418 01f8 00000000 		.word	D1CorePrescTable
ARM GAS  /tmp/ccR2a0SM.s 			page 17


 419 01fc 00000000 		.word	SystemD2Clock
 420 0200 00000000 		.word	SystemCoreClock
 421 0204 00000039 		.word	956301312
 422 0208 0024744A 		.word	1249125376
 423 020c 20BCBE4B 		.word	1270791200
 424 0210 40787D01 		.word	25000000
 425              		.cfi_endproc
 426              	.LFE133:
 428              		.global	D1CorePrescTable
 429              		.section	.rodata.D1CorePrescTable,"a"
 430              		.align	2
 433              	D1CorePrescTable:
 434 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 434      01020304 
 434      01020304 
 434      06
 435 000d 070809   		.ascii	"\007\010\011"
 436              		.global	SystemD2Clock
 437              		.section	.data.SystemD2Clock,"aw"
 438              		.align	2
 441              	SystemD2Clock:
 442 0000 0090D003 		.word	64000000
 443              		.global	SystemCoreClock
 444              		.section	.data.SystemCoreClock,"aw"
 445              		.align	2
 448              	SystemCoreClock:
 449 0000 0090D003 		.word	64000000
 450              		.text
 451              	.Letext0:
 452              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 453              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 454              		.file 4 "../../Drivers/CMSIS/Include/core_cm4.h"
 455              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 456              		.file 6 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h755xx.h"
 457              		.file 7 "/usr/arm-none-eabi/include/math.h"
ARM GAS  /tmp/ccR2a0SM.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx_dualcore_boot_cm4_cm7.c
     /tmp/ccR2a0SM.s:21     .text.SystemInit:00000000 $t
     /tmp/ccR2a0SM.s:27     .text.SystemInit:00000000 SystemInit
     /tmp/ccR2a0SM.s:52     .text.SystemInit:00000018 $d
     /tmp/ccR2a0SM.s:57     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccR2a0SM.s:63     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccR2a0SM.s:88     .text.SystemCoreClockUpdate:00000014 $d
     /tmp/ccR2a0SM.s:113    .text.SystemCoreClockUpdate:00000046 $t
     /tmp/ccR2a0SM.s:415    .text.SystemCoreClockUpdate:000001ec $d
     /tmp/ccR2a0SM.s:433    .rodata.D1CorePrescTable:00000000 D1CorePrescTable
     /tmp/ccR2a0SM.s:441    .data.SystemD2Clock:00000000 SystemD2Clock
     /tmp/ccR2a0SM.s:448    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccR2a0SM.s:430    .rodata.D1CorePrescTable:00000000 $d
     /tmp/ccR2a0SM.s:438    .data.SystemD2Clock:00000000 $d
     /tmp/ccR2a0SM.s:445    .data.SystemCoreClock:00000000 $d

NO UNDEFINED SYMBOLS
